import React, { useState, useContext } from "react";
import { Link as RouterLink } from "react-router-dom";
import {
  Button,
  CssBaseline,
  TextField,
  Grid,
  Box,
  Typography,
  Container,
  InputAdornment,
  IconButton,
  Link,
} from "@material-ui/core";
import { Visibility, VisibilityOff } from "@material-ui/icons";
import { i18n } from "../../translate/i18n";
import { AuthContext } from "../../context/Auth/AuthContext";
import { versionSystem } from "../../../package.json";
import { nomeEmpresa } from "../../../package.json";
import logo from "../../assets/logo.png";
import "./style.css";

const Copyright = () => {
  return (
    <Typography variant="body2" color="textSecondary" align="center">
      Â© {new Date().getFullYear()} {" - "}
      <Link color="inherit" href="#">
        {nomeEmpresa} - v {versionSystem}
      </Link>
      {"."}
    </Typography>
  );
};

const Login = () => {
  const [user, setUser] = useState({ email: "", password: "" });
  const [showPassword, setShowPassword] = useState(false);
  const { handleLogin } = useContext(AuthContext);

  const handleChangeInput = (e) => {
    setUser({ ...user, [e.target.name]: e.target.value });
  };

  const handleSubmit = (e) => {
    e.preventDefault();
    handleLogin(user);
  };

  return (
    <div className="root-login">
      <div className="container-login">
        <Container component="main" maxWidth="xs">
          <CssBaseline />
          <div className="paper-login">
            <img alt="logo" src={logo} className="logo-login" />
            <form className="form-login" noValidate onSubmit={handleSubmit}>
              <TextField
                variant="outlined"
                margin="normal"
                required
                fullWidth
                id="email"
                label={i18n.t("login.form.email")}
                name="email"
                value={user.email}
                onChange={handleChangeInput}
                autoComplete="email"
                autoFocus
              />
              <TextField
                variant="outlined"
                margin="normal"
                required
                fullWidth
                name="password"
                label={i18n.t("login.form.password")}
                id="password"
                value={user.password}
                onChange={handleChangeInput}
                autoComplete="current-password"
                type={showPassword ? "text" : "password"}
                InputProps={{
                  endAdornment: (
                    <InputAdornment position="end">
                      <IconButton
                        aria-label="toggle password visibility"
                        onClick={() => setShowPassword((prev) => !prev)}
                      >
                        {showPassword ? <VisibilityOff /> : <Visibility />}
                      </IconButton>
                    </InputAdornment>
                  ),
                }}
              />
              <Button
                type="submit"
                fullWidth
                variant="contained"
                color="primary"
                className="submit-login"
              >
                {i18n.t("login.buttons.submit")}
              </Button>
            </form>
          </div>
          <Box mt={8} className="container-footer">
            <Copyright />
          </Box>
        </Container>
      </div>
      <div className="container-img-login">
        <div className="img-login"></div>
      </div>
    </div>
  );
};

export default Login;
